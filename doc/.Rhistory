library(wesanderson)
library(knitr)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(tidytext)
library(dplyr)
library(wordcloud)
library(topicmodels)
library(wesanderson)
library(tm)
# load processed lyrics data & artists data
load('../output/processed_lyrics.RData')
artists.csv <- read.csv('../data/artists.csv')
# select the genre from the processed lyrics
genre <- dt_lyrics %>% select(genre, stemmedwords)
# rank of the genre
rank <- genre %>% group_by(genre) %>%
count() %>%
arrange(desc(n))
# frequency plot of the genre
ggplot(genre, aes(x = reorder(genre, genre, function(x)-length(x)))) +
geom_bar() +
labs(x = 'Genre', y = 'Frequency',
title = 'Genre Frequency') +
theme_light()
# year
year <- dt_lyrics %>%
group_by(year) %>%
count() %>%
arrange(year) %>%
filter(year > 1900)
ggplot(year, aes(x = year,y = n)) +
geom_bar(stat = 'identity') +
labs(x = 'Year', y = 'Frequency',
title = 'Year Frequency') +
theme_light()
# Year: 2006
year_06 <- dt_lyrics %>% filter(year == 2006) %>%
group_by(artist) %>%
count()
# get sentiment for lyrics in the rock music
rock_lyrics <- dt_lyrics %>% filter(genre == 'Rock') %>%
select(stemmedwords) %>%
unnest_tokens(word, stemmedwords) %>%
left_join(get_sentiments("nrc"), by = c('word')) %>%
filter(!is.na(sentiment))
# sentiment percent for rock music
rock_sentiment <- rock_lyrics %>% group_by(sentiment) %>%
count() %>%
arrange(desc(n)) %>%
ungroup() %>%
mutate(n = n / sum(n)) %>%
rename(percent = n)
rock_sentiment
# drawing a pie chart
ggplot(rock_sentiment, aes(x = '', y = percent, fill = sentiment)) +
geom_bar(width = 1, stat = 'identity') +
coord_polar('y', start = 0) +
labs(x = '', y = '', title = 'Sentiments for Rock Music') +
scale_fill_brewer(palette = "Set3") +
theme_light()
View(rock_sentiment)
# get sentiment for lyrics in the rock music
rock_lyrics <- dt_lyrics %>% filter(genre == 'Rock') %>%
select(stemmedwords) %>%
unnest_tokens(word, stemmedwords) %>%
left_join(get_sentiments("nrc"), by = c('word')) %>%
filter(!is.na(sentiment))
# sentiment percent for rock music
rock_sentiment <- rock_lyrics %>% group_by(sentiment) %>%
count() %>%
arrange(desc(n)) %>%
ungroup() %>%
mutate(n = n / sum(n)) %>%
rename(percent = n)
rock_sentiment
# drawing a pie chart
ggplot(rock_sentiment, aes(x = '', y = percent, fill = sentiment)) +
geom_bar(width = 1, stat = 'identity') +
coord_polar('y', start = 0) +
labs(x = '', y = '', title = 'Sentiments for Rock Music') +
scale_fill_brewer(palette = "Set3") +
theme_light()
# select high frequency words from each emotions
top10_rock <- rock_lyrics %>%
count(word, sentiment) %>%
group_by(sentiment) %>%
top_n(n = 10) %>%
ungroup()
# plot the high frequency words with group of different emotions
ggplot(top10_rock, aes(x = reorder(word, n), y = n, fill = sentiment)) +
geom_col(show.legend = FALSE) +
facet_wrap(~sentiment, scales="free") +
labs(x = 'Word', y = 'Contribution to sentiment') +
coord_flip() +
theme_light()
# Word Cloud: Rock
pal = brewer.pal(5, "Set3")
rock_lyrics %>%
count(word) %>%
with(wordcloud(word, n, max.words = 100, colors = rev(pal)))
# get sentiment for lyrics in the rock music
pop_lyrics <- dt_lyrics %>% filter(genre == 'Pop') %>%
select(stemmedwords) %>%
unnest_tokens(word, stemmedwords) %>%
left_join(get_sentiments("nrc"), by = c('word')) %>%
filter(!is.na(sentiment))
# sentiment percent for rock music
pop_sentiment <- pop_lyrics %>% group_by(sentiment) %>%
count() %>%
arrange(desc(n)) %>%
ungroup() %>%
mutate(n = n / sum(n)) %>%
rename(percent = n)
pop_sentiment
# drawing a pie chart
ggplot(pop_sentiment, aes(x = '', y = percent, fill = sentiment)) +
geom_bar(width = 1, stat = 'identity') +
coord_polar('y', start = 0) +
labs(x = '', y = '', title = 'Sentiments for Pop Music') +
scale_fill_brewer(palette="Paired") +
theme_light()
# select high frequency words from each emotions
top10_pop <- pop_lyrics %>%
count(word, sentiment) %>%
group_by(sentiment) %>%
top_n(n = 10) %>%
ungroup()
# plot the high frequency words with group of different emotions
ggplot(top10_pop, aes(x = reorder(word, n), y = n, fill = sentiment)) +
geom_col(show.legend = FALSE) +
facet_wrap(~sentiment, scales="free") +
labs(x = 'Word', y = 'Contribution to sentiment') +
coord_flip() +
theme_light()
# Word Cloud: Pop
pal = brewer.pal(6, "Paired")
pop_lyrics %>% anti_join(stop_words) %>%
count(word) %>%
with(wordcloud(word, n, max.words = 100, colors = rev(pal)))
# get sentiment for lyrics in the rock music
metal_lyrics <- dt_lyrics %>% filter(genre == 'Metal') %>%
select(stemmedwords) %>%
unnest_tokens(word, stemmedwords) %>%
left_join(get_sentiments("nrc"), by = c('word')) %>%
filter(!is.na(sentiment))
# sentiment percent for rock music
metal_sentiment <- metal_lyrics %>% group_by(sentiment) %>%
count() %>%
arrange(desc(n)) %>%
ungroup() %>%
mutate(n = n / sum(n)) %>%
rename(percent = n)
metal_sentiment
# drawing a pie chart
ggplot(metal_sentiment, aes(x = '', y = percent, fill = sentiment)) +
geom_bar(width = 1, stat = 'identity') +
coord_polar('y', start = 0) +
labs(x = '', y = '', title = 'Sentiments for Metal Music') +
scale_fill_brewer(palette="RdGy") +
theme_light()
# select high frequency words from each emotions
top10_metal <- metal_lyrics %>%
count(word, sentiment) %>%
group_by(sentiment) %>%
top_n(n = 10) %>%
ungroup()
# plot the high frequency words with group of different emotions
ggplot(top10_metal, aes(x = reorder(word, n), y = n, fill = sentiment)) +
geom_col(show.legend = FALSE) +
facet_wrap(~sentiment, scales="free") +
labs(x = 'Word', y = 'Contribution to sentiment') +
coord_flip() +
theme_light()
# Word Cloud: Metal
pal = brewer.pal(5, "RdGy")
metal_lyrics %>% anti_join(stop_words) %>%
count(word) %>%
with(wordcloud(word, n, max.words = 100, colors = rev(pal)))
rock_sentiment %>% mutate(genre = 'Rock')
rock_new <- rock_sentiment %>% mutate(genre = 'Rock')
pop_new <- pop_sentiment %>% mutate(genre = 'Pop')
View(pop_new)
metal_new <- metal_sentiment %>% mutate(genre = 'Metal')
comp_senti <- rbind(rock_new, pop_new, metal_new)
View(comp_senti)
ggplot(comp_senti, aes(x = sentiments, y = percent, fill = genre)) %>%
geom_point()
ggplot(comp_senti, aes(x = sentiments, y = percent, fill = genre)) +
geom_point()
ggplot(comp_senti, aes(x = sentiments, y = percent, fill = genre)) +
geom_point()
ggplot(comp_senti, aes(x = sentiment, y = percent, fill = genre)) +
geom_point()
ggplot(comp_senti, aes(x = sentiment, y = percent, fill = genre)) +
geom_line()
ggplot(comp_senti, aes(x = sentiment, y = percent, colour = genre)) +
geom_line()
geom_line()
geom_line()
ggplot(rock_new, aes(x = sentiment, y = percent)) +
geom_line()
ggplot(rock_new, aes(x = percent, fill = sentiment)) +
geom_line()
ggplot(rock_new, aes(x = sentiment, y = percent)) +
geom_point()
ggplot(rock_new, aes(x = sentiment, y = percent, colour = genre)) +
geom_point()
ggplot(comp_senti, aes(x = sentiment, y = percent, colour = genre)) +
geom_point()
ggplot(comp_senti, aes(x = sentiment, y = percent, colour = genre)) +
geom_point() +
geom_line()
ggplot(comp_senti, aes(x = sentiment, y = percent, colour = genre, group = genre)) +
geom_point() +
geom_line()
ggplot(comp_senti, aes(x = sentiment, y = percent, colour = genre, group = genre)) +
geom_point() +
geom_line() +
theme_light()
